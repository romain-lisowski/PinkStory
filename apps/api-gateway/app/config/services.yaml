# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app_name: '%env(resolve:APP_NAME)%'
    app_secret: '%env(resolve:APP_SECRET)%'
    app_host_api_gateway: '%env(resolve:APP_HOST_API_GATEWAY)%'
    app_host_front_web: '%env(resolve:APP_HOST_FRONT_WEB)%'
    jwt_key: '%env(resolve:JWT_KEY)%'
    jwt_algorithm: '%env(resolve:JWT_ALGORITHM)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src'
        exclude:
            - '../src/Kernel.php'
            - '../src/Entity/'
            - '../src/Exception/'

    App\User\:
        resource: '../src/User'
        exclude:
            - '../src/User/Command/*Command.php'
            - '../src/User/Entity/'
            - '../src/User/Event/'
            - '../src/User/Exception/'

    App\Mercure\:
        resource: '../src/Mercure'
        exclude:
            - '../src/Mercure/Command/*Command.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\User\Action\:
        resource: '../src/User/Action'
        tags: ['controller.service_arguments']
        
    App\Mercure\Action\:
        resource: '../src/Mercure/Action'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
